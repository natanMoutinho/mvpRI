version: "3"

services:
  mvp:
    # build: .
    container_name: mvp_repositorio_institucional
    image: node:18-alpine
    working_dir: /usr/src/mvp_repositorio/ 
    # npm run dockerDev
    # command: sh -c "curl -v https://google.com"
    # command: sh -c "curl -v https://registry.npmjs.com/"
    command: sh -c " npm install -g npm@9.6.0 && yarn prod && npx prisma generate && yarn dockerDev"
    # command: sh -c "npx prisma studio"
    tty: true
    
    volumes:
      - ./dists/:/usr/src/mvp_repositorio/dists/
      - ./package.json:/usr/src/mvp_repositorio/package.json
      - ./public/:/usr/src/mvp_repositorio/public/
      - ./prisma/:/usr/src/mvp_repositorio/prisma/
      - ./.env:/usr/src/mvp_repositorio/.env
      # - ./yarn.lock:/usr/src/toDoList/yarn.lock
      # - ./yarn-error.log:/usr/src/toDoList/yarn-error.log
    # expose:
    #   - 2222
    # host_port x container_port
    ports:
      - "3000:3333"
      - "5555:5555"
    depends_on:
      - postgress


  postgress:
    container_name: postgress_container
    image: postgres:11-alpine
    # volumes:
    #   - ./db/:/usr/bd/
    environment:
      - POSTGRES_PASSWORD=abc123
      - POSTEGRES_USER=aluno
      - POSTGRES_DB=repository
    volumes:
      - ./db-postgres/:/var/lib/postgresql/data
      - ./db-postgres/
    ports:
      - "5432:5432"
    tty: true

  # volumes:
  #     - ./db-postgres/